* About
This is a simple enough repository containing some ~C++~ code and wrappers to
manipulate systems of copper and hydrogen. The focus is on generating data from
~con~ files which can then be visualized in ~R~. By relying on ~readCon~, we can
return dataframes from files without an intermediate stage in ~R~.
** Assumptions
- We return "free atom" forces only, that is we explicitly zero out the forces
  of atoms which are marked as unmoving in the ~con~ file
** Usage
At the moment, the easiest / most robust way to use this is with the bundled
environment.
#+begin_src bash
micromamba create -f environment.yml
micromamba activate cuh2vizR_dev
#+end_src
*** Prerequisites
We need the ~readConR~ package, so:
#+begin_src bash
Rscript -e 'remotes::install_github("HaoZeke/readconR")'
Rscript -e 'remotes::install_github("TheochemUI/potlibR")'
#+end_src
*** Installation
We can use the following for ensuring everything goes well:
#+begin_src bash
Rscript -e 'library(devtools); devtools::clean_dll(); cpp11::cpp_register(); devtools::document(); devtools::install()'
#+end_src
* Developing
** Reload
#+begin_src R
devtools::clean_dll()
cpp11::cpp_register()
devtools::document()
devtools::load_all()
#+end_src
** Exports
Rather confusingly (by [[https://github.com/r-lib/cpp11/issues/233][design apparently]]) and unlike ~Rcpp~[fn:whynot],
functions are not automatically exported. They will need an entry in the
~R/pkgname-package.R~ file.
** Linting
~pre-commit~ has trouble locally with ~R~ hoooks so:
#+begin_src bash
Rscript -e 'library(styler); style_dir(".")'
Rscript -e 'library(lintr); lint_package()'
#+end_src
* License
MIT.

[fn:whynot] Generally much more usable
